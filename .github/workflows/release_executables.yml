
name: Build and Release Executables

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.retrieve_tag.outputs.tag }}
    steps:
      - name: Get number of commits
        id: get_version
        run: echo "version=$(git rev-list --count HEAD)" >> $GITHUB_ENV
        shell: bash

      - name: Set the tag
        id: retrieve_tag
        run: echo "::set-output name=tag::v0.0.${{ steps.get_version.outputs.version }}"

  build:
    needs: tag
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
          architecture: 'x64'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: open_jupyter.py
          onefile: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-executable
          path: |
            build/open_jupyter.exe
            build/open_jupyter.bin
            build/open_jupyter.app/**/*

  release:
    needs: [build, tag]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          release_name: Release ${{ needs.tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload Release Assets (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows-latest-executable/open_jupyter.exe
          asset_name: open_jupyter-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu-latest-executable/open_jupyter.bin
          asset_name: open_jupyter-linux.bin
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (MacOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos-latest-executable/open_jupyter.app/**/*
          asset_name: open_jupyter-macos.app.zip
          asset_content_type: application/zip
